"""
given a series of files generated by run_analyse.py, this combines
them into one file
"""

import collections
import json
import sys


def main():
    filenames = sys.argv[1:]

    drug_predictions = collections.defaultdict(list)
    genes = collections.defaultdict(int)
    mutations = collections.defaultdict(int)
    gene_muts = collections.defaultdict(int)

    for filename in filenames:
        with open(filename) as f:
            d = json.loads(f.read())
            for k, v in d["drug_predictions"].items():
                drug_predictions[k] += v
            for k, v in d["genes"].items():
                genes[k] += v
            for k, v in d["mutations"].items():
                mutations[k] += v
            for k, v in d["gene_muts"].items():
                gene_muts[k] += v

    genes = sorted(genes.items(), key=lambda item: item[1], reverse=True)
    genes = {k: v for k, v in genes}
    mutations = sorted(mutations.items(), key=lambda item: item[1], reverse=True)
    mutations = {k: v for k, v in mutations}
    gene_muts = sorted(gene_muts.items(), key=lambda item: item[1], reverse=True)
    gene_muts = {k: v for k, v in gene_muts}

    print("1. metadata")

    for drug, predictions in drug_predictions.items():
        print(drug, collections.Counter(predictions))

    print("2. effects")

    print("2.1 genes")
    for gene_name, count in genes.items():
        print("gene:", gene_name, "count:", count)

    print("2.2 mutations")
    for mutation_name, count in mutations.items():
        print("mutation:", mutation_name, "count:", count)

    print("2.3 gene + mutations")
    for gene_mut, count in gene_muts.items():
        print("mutation:", gene_mut, "count:", count)

    d = {
        "drug_predictions": drug_predictions,
        "genes": genes,
        "mutations": mutations,
        "gene_muts": gene_muts,
    }

    with open(f"combined.res.json", "w") as f:
        f.write(json.dumps(d, indent=4))


if __name__ == "__main__":
    main()
